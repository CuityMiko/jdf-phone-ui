
var n22Utils={getParentOrSelfWithClass:function(e,className,depth){depth=depth||10
  while(e&&depth--){if(e.classList&&e.classList.contains(className)){return e}
  e=e.parentNode}
  return null},trigger:function(eventType,data,bubbles,cancelable){var event=new window.CustomEvent(eventType,{detail:data,bubbles:!!bubbles,cancelable:!!cancelable})
  return event},requestAnimationFrame:(function(){var requestFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame
  var isNative=!!requestFrame
  if(requestFrame&&!/requestAnimationFrame\(\)\s*\{\s*\[native code\]\s*\}/i.test(requestFrame.toString())){isNative=false}
  if(isNative){return function(callback,root){requestFrame(callback,root)}}
  var TARGET_FPS=60
  var requests={}
  var requestCount=0
  var rafHandle=1
  var intervalHandle=null
  var lastActive=+new Date()
  return function(callback){var callbackHandle=rafHandle++
  requests[callbackHandle]=callback
  requestCount++
  if(intervalHandle===null){intervalHandle=setInterval(function(){var time=+new Date()
  var currentRequests=requests
  requests={}
  requestCount=0
  for(var key in currentRequests){if(currentRequests.hasOwnProperty(key)){currentRequests[key](time)
  lastActive=time}}
  if(time-lastActive>2500){clearInterval(intervalHandle)
  intervalHandle=null}},1000/TARGET_FPS)}
  return callbackHandle}})(),Platform:{isAndroid:function(){return false},ready:function(call){call()},isIOS:function(){return true},isWebView:function(){return true}},tab:{isKeyboardElement:function(ele){if(!n22Utils.Platform.isIOS()||n22Utils.Platform.isIPad()){return n22Utils.tap.isTextInput(ele)&&!n22Utils.tap.isDateInput(ele)}else{return n22Utils.tap.isTextInput(ele)||(!!ele&&ele.tagName=='SELECT')}}},debounce:function(func,wait,immediate){var timeout,args,context,timestamp,result
  return function(){context=this
  args=arguments
  timestamp=new Date()
  var later=function(){var last=(new Date())-timestamp
  if(last<wait){timeout=setTimeout(later,wait-last)}else{timeout=null
  if(!immediate)result=func.apply(context,args)}}
  var callNow=immediate&&!timeout
  if(!timeout){timeout=setTimeout(later,wait)}
  if(callNow)result=func.apply(context,args)
  return result}}}
  var keyboardCurrentViewportHeight=0
  var keyboardPortraitViewportHeight=0
  var keyboardLandscapeViewportHeight=0
  var keyboardActiveElement
  var lastKeyboardActiveElement
  var scrollView
  var waitForResizeTimer
  var keyboardFocusOutTimer
  var wasOrientationChange=false
  var KEYBOARD_OPEN_CSS='keyboard-open'
  var SCROLL_CONTAINER_CSS='scroll-content'
  var debouncedKeyboardFocusIn=n22Utils.debounce(keyboardFocusIn,200,true)
  var debouncedKeyboardNativeShow=n22Utils.debounce(keyboardNativeShow,100,true)
  var tempOverflow
  n22Utils.keyboard={isOpen:false,isClosing:false,isOpening:false,height:0,isLandscape:false,isInitialized:false,hide:function(){if(keyboardHasPlugin()){cordova.plugins.Keyboard.close()}
  keyboardActiveElement&&keyboardActiveElement.blur()},show:function(){if(keyboardHasPlugin()){cordova.plugins.Keyboard.show()}},disable:function(){if(keyboardHasPlugin()){window.removeEventListener('native.keyboardshow',debouncedKeyboardNativeShow)
  window.removeEventListener('native.keyboardhide',keyboardFocusOut)}else{document.body.removeEventListener('focusout',keyboardFocusOut)}
  document.body.removeEventListener('focusin',debouncedKeyboardFocusIn)
  window.removeEventListener('orientationchange',keyboardOrientationChange)
  if(window.navigator.msPointerEnabled){document.removeEventListener('MSPointerDown',keyboardInit)}else{document.removeEventListener('touchstart',keyboardInit)}
  n22Utils.keyboard.isInitialized=false},enable:function(){keyboardInit()}}
  keyboardCurrentViewportHeight=getViewportHeight()
  function keyboardInit(){console.log('touch')
  if(n22Utils.keyboard.isInitialized)return
  if(keyboardHasPlugin()){window.addEventListener('native.keyboardshow',debouncedKeyboardNativeShow)
  window.addEventListener('native.keyboardhide',keyboardFocusOut)}else{document.body.addEventListener('focusout',keyboardFocusOut)}
  document.body.addEventListener('focusin',debouncedKeyboardFocusIn)
  if(window.navigator.msPointerEnabled){document.removeEventListener('MSPointerDown',keyboardInit)}else{document.removeEventListener('touchstart',keyboardInit)}
  n22Utils.keyboard.isInitialized=true}
  function keyboardNativeShow(e){clearTimeout(keyboardFocusOutTimer)
  console.log('keyboardNativeShow fired at: '+Date.now())
  console.log('keyboardNativeshow window.innerHeight: '+window.innerHeight)
  if(!n22Utils.keyboard.isOpen||n22Utils.keyboard.isClosing){n22Utils.keyboard.isOpening=true
  n22Utils.keyboard.isClosing=false}
  n22Utils.keyboard.height=e.keyboardHeight
  console.log('nativeshow keyboard height:'+e.keyboardHeight)
  if(wasOrientationChange){keyboardWaitForResize(keyboardUpdateViewportHeight,true)}else{keyboardWaitForResize(keyboardShow,true)}}
  function keyboardFocusIn(e){clearTimeout(keyboardFocusOutTimer)
  console.log('keyboardFocusIn from: '+e.type+' at: '+Date.now())
  scrollView=n22Utils.getParentOrSelfWithClass(e.target,SCROLL_CONTAINER_CSS)
  console.log(scrollView.classList)
  keyboardActiveElement=e.target
  if(!n22Utils.keyboard.isOpen||n22Utils.keyboard.isClosing){n22Utils.keyboard.isOpening=true
  n22Utils.keyboard.isClosing=false}
  document.addEventListener('keydown',keyboardOnKeyDown,false)
  if(!n22Utils.keyboard.isOpen&&!keyboardHasPlugin()){keyboardWaitForResize(keyboardShow,true)}else if(n22Utils.keyboard.isOpen){keyboardShow()}}
  function keyboardFocusOut(){clearTimeout(keyboardFocusOutTimer)
  console.log('keyboardFocusOut fired at: '+Date.now())
  if(n22Utils.keyboard.isOpen||n22Utils.keyboard.isOpening){n22Utils.keyboard.isClosing=true
  n22Utils.keyboard.isOpening=false}
  keyboardFocusOutTimer=setTimeout(function(){n22Utils.requestAnimationFrame(function(){console.log('focusOut, wasOrientationChange: '+wasOrientationChange)
  if(wasOrientationChange){keyboardWaitForResize(function(){keyboardUpdateViewportHeight()
  keyboardHide()},false)}else{keyboardWaitForResize(keyboardHide,false)}})},50)}
  function keyboardOrientationChange(){console.log('orientationchange fired at: '+Date.now())
  console.log('orientation was: '+(n22Utils.keyboard.isLandscape?'landscape':'portrait'))
  n22Utils.keyboard.isLandscape=!n22Utils.keyboard.isLandscape
  if(n22Utils.Platform.isIOS()){keyboardUpdateViewportHeight()}
  if(n22Utils.Platform.isAndroid()){if(!n22Utils.keyboard.isOpen||!keyboardHasPlugin()){keyboardWaitForResize(keyboardUpdateViewportHeight,false)}else{wasOrientationChange=true}}}
  function keyboardOnKeyDown(e){}
  function keyboardPreventDefault(e){if(e.target.tagName!=='TEXTAREA'){e.preventDefault()}}
  function keyboardWaitForResize(callback,isOpening){clearInterval(waitForResizeTimer)
  var count=0
  var maxCount
  var initialHeight=getViewportHeight()
  var viewportHeight=initialHeight
  if(n22Utils.Platform.isAndroid()&&5<4.4){maxCount=30}else if(n22Utils.Platform.isAndroid()){maxCount=10}else{maxCount=1}
  waitForResizeTimer=setInterval(function(){viewportHeight=getViewportHeight()
  if(++count<maxCount&&((!isPortraitViewportHeight(viewportHeight)&&!isLandscapeViewportHeight(viewportHeight))||!n22Utils.keyboard.height)){return}
  if(!keyboardHasPlugin()){n22Utils.keyboard.height=Math.abs(initialHeight-window.innerHeight)}
  n22Utils.keyboard.isOpen=isOpening
  clearInterval(waitForResizeTimer)
  callback()},50)
  return maxCount}
  function keyboardHide(){clearTimeout(keyboardFocusOutTimer)
  n22Utils.keyboard.isOpen=false
  n22Utils.keyboard.isClosing=false
  if(keyboardActiveElement||lastKeyboardActiveElement){let event=n22Utils.trigger('resetScrollView',{target:keyboardActiveElement||lastKeyboardActiveElement},true)
  resetScrollView(event)}
  n22Utils.requestAnimationFrame(function(){document.body.classList.remove(KEYBOARD_OPEN_CSS)})
  if(window.navigator.msPointerEnabled){document.removeEventListener('MSPointerMove',keyboardPreventDefault)}else{document.removeEventListener('touchmove',keyboardPreventDefault)}
  document.removeEventListener('keydown',keyboardOnKeyDown)
  if(n22Utils.Platform.isAndroid()){if(keyboardHasPlugin())cordova.plugins.Keyboard.close()
  keyboardActiveElement&&keyboardActiveElement.blur()}
  keyboardActiveElement=null
  lastKeyboardActiveElement=null}
  function keyboardShow(){n22Utils.keyboard.isOpen=true
  n22Utils.keyboard.isOpening=false
  var details={keyboardHeight:keyboardGetHeight(),viewportHeight:keyboardCurrentViewportHeight}
  if(keyboardActiveElement){details.target=keyboardActiveElement
  var elementBounds=keyboardActiveElement.getBoundingClientRect()
  details.elementTop=Math.round(elementBounds.top)
  details.elementBottom=Math.round(elementBounds.bottom)
  details.windowHeight=details.viewportHeight-details.keyboardHeight
  console.log('keyboardShow viewportHeight: '+details.viewportHeight+', windowHeight: '+details.windowHeight+', keyboardHeight: '+details.keyboardHeight)
  details.isElementUnderKeyboard=(details.elementBottom>details.windowHeight)
  console.log('isUnderKeyboard: '+details.isElementUnderKeyboard)
  console.log('elementBottom: '+details.elementBottom)
  var event=n22Utils.trigger('scrollChildIntoView',details,true)
  scrollChildIntoView(event)}
  setTimeout(function(){document.body.classList.add(KEYBOARD_OPEN_CSS)},400)
  return details}
  function keyboardGetHeight(){if(n22Utils.keyboard.height){return n22Utils.keyboard.height}
  if(n22Utils.Platform.isAndroid()){if(n22Utils.Platform.isFullScreen){return 275}
  var contentHeight=window.innerHeight
  if(contentHeight<keyboardCurrentViewportHeight){return keyboardCurrentViewportHeight-contentHeight}else{return 0}}
  if(n22Utils.Platform.isIOS()){if(n22Utils.keyboard.isLandscape){return 206}
  if(!n22Utils.Platform.isWebView()){return 216}
  return 260}
  return 275}
  function isPortraitViewportHeight(viewportHeight){return!!(!n22Utils.keyboard.isLandscape&&keyboardPortraitViewportHeight&&(Math.abs(keyboardPortraitViewportHeight-viewportHeight)<2))}
  function isLandscapeViewportHeight(viewportHeight){return!!(n22Utils.keyboard.isLandscape&&keyboardLandscapeViewportHeight&&(Math.abs(keyboardLandscapeViewportHeight-viewportHeight)<2))}
  function keyboardUpdateViewportHeight(){wasOrientationChange=false
  keyboardCurrentViewportHeight=getViewportHeight()
  if(n22Utils.keyboard.isLandscape&&!keyboardLandscapeViewportHeight){keyboardLandscapeViewportHeight=keyboardCurrentViewportHeight}else if(!n22Utils.keyboard.isLandscape&&!keyboardPortraitViewportHeight){keyboardPortraitViewportHeight=keyboardCurrentViewportHeight}
  if(keyboardActiveElement){n22Utils.trigger('resetScrollView',{target:keyboardActiveElement},true)}
  if(n22Utils.keyboard.isOpen&&n22Utils.tap.isTextInput(keyboardActiveElement)){keyboardShow()}}
  function keyboardInitViewportHeight(){var viewportHeight=getViewportHeight()
  if((viewportHeight/window.innerWidth)<1){n22Utils.keyboard.isLandscape=true}
  keyboardCurrentViewportHeight=viewportHeight
  if(n22Utils.keyboard.isLandscape&&!keyboardLandscapeViewportHeight){keyboardLandscapeViewportHeight=keyboardCurrentViewportHeight}else if(!n22Utils.keyboard.isLandscape&&!keyboardPortraitViewportHeight){keyboardPortraitViewportHeight=keyboardCurrentViewportHeight}}
  function getViewportHeight(){var windowHeight=window.innerHeight
  console.log('window.innerHeight is: '+windowHeight)
  console.log('kb height is: '+n22Utils.keyboard.height)
  console.log('kb isOpen: '+n22Utils.keyboard.isOpen)
  if(!(n22Utils.Platform.isAndroid()&&n22Utils.Platform.isFullScreen)&&(n22Utils.keyboard.isOpen||n22Utils.keyboard.isOpening)&&!n22Utils.keyboard.isClosing){return windowHeight+keyboardGetHeight()}
  return windowHeight}
  function keyboardHasPlugin(){console.log('keyboardHasPlugin---',!!(window.cordova&&cordova.plugins&&cordova.plugins.Keyboard))
  return!!(window.cordova&&cordova.plugins&&cordova.plugins.Keyboard)}
  n22Utils.Platform.ready(function(){keyboardInitViewportHeight()
  window.addEventListener('orientationchange',keyboardOrientationChange)
  setTimeout(keyboardInitViewportHeight,999)
  if(window.navigator.msPointerEnabled){document.addEventListener('MSPointerDown',keyboardInit,false)}else{document.addEventListener('touchstart',keyboardInit,false)}})
  function scrollChildIntoView(e){console.log('scrollChildIntoView at: '+Date.now())
  var scrollBottomOffsetToTop=scrollView.getBoundingClientRect().bottom
  var scrollViewOffsetHeight=scrollView.offsetHeight
  var alreadyShrunk=self.isShrunkForKeyboard
  var isModal=false
  var isInsetModal=isModal&&window.innerWidth>=680
  if(!alreadyShrunk){if(true){var scrollBottomOffsetToBottom=e.detail.viewportHeight-scrollBottomOffsetToTop
  var keyboardOffset=Math.max(0,e.detail.keyboardHeight-scrollBottomOffsetToBottom)
  requestAnimationFrame(function(){})}
  self.isShrunkForKeyboard=true}
  if(e.detail.isElementUnderKeyboard){requestAnimationFrame(function(){if(self.isShrunkForKeyboard&&!alreadyShrunk){scrollBottomOffsetToTop=scrollView.getBoundingClientRect().bottom}
  var scrollMidpointOffset=scrollViewOffsetHeight*0.5
  var inputMidpoint=((e.detail.elementBottom+e.detail.elementTop)/2)
  var inputMidpointOffsetToScrollBottom=inputMidpoint-scrollBottomOffsetToTop
  var scrollTop=inputMidpointOffsetToScrollBottom+scrollMidpointOffset
  if(scrollTop>0&&scrollView.style.overflow!='visible'){tempOverflow=scrollView.style.overflow
  let scrollTopTemp=scrollView.scrollTop+scrollTop+50
  scrollView.style.transform='translateY(-'+scrollTopTemp+'px)'
  scrollView.style.overflow='visible'}})}
  e.stopPropagation()}
  function resetScrollView(e){self.isShrunkForKeyboard=false
  scrollView.style.transform='translateY(0px)'
  scrollView.style.overflow=tempOverflow}
